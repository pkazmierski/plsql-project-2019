-- Generated by Oracle SQL Developer Data Modeler 19.4.0.350.1424
--   at:        2020-01-11 16:53:34 CET
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



CREATE TABLE document_type (
    id    INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CYCLE NOCACHE ORDER )
    NOT NULL,
    name  VARCHAR2(30 CHAR) NOT NULL
)
LOGGING;

COMMENT ON TABLE document_type IS
    'Defines possible document types.';

ALTER TABLE document_type ADD CONSTRAINT document_type_pk PRIMARY KEY ( id );

CREATE TABLE guest (
    id                INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CYCLE CACHE 1000 ORDER )
    NOT NULL,
    first_name        VARCHAR2(50) NOT NULL,
    last_name         VARCHAR2(50) NOT NULL,
    phone             NUMBER,
    email             VARCHAR2(100),
    nationality       VARCHAR2(50) NOT NULL,
    document_id       VARCHAR2(30) NOT NULL,
    birth_date        DATE NOT NULL,
    document_type_id  INTEGER NOT NULL,
    status_id         INTEGER NOT NULL
)
LOGGING;

COMMENT ON TABLE guest IS
    'Stores information about guests.';

ALTER TABLE guest ADD CONSTRAINT guest_pk PRIMARY KEY ( id );

CREATE TABLE guest_status (
    id           INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    status_name  VARCHAR2(50) NOT NULL,
    multiplier   NUMBER NOT NULL
)
LOGGING;

ALTER TABLE guest_status ADD CONSTRAINT status_pk PRIMARY KEY ( id );

CREATE TABLE guests_in_reservation (
    guest_id        INTEGER NOT NULL,
    reservation_id  INTEGER NOT NULL
)
LOGGING;

COMMENT ON TABLE guests_in_reservation IS
    'Stores information about guests assigned to specific reservations.';

ALTER TABLE guests_in_reservation ADD CONSTRAINT guests_in_reservation_pk PRIMARY KEY ( guest_id,
                                                                                        reservation_id );

CREATE TABLE payment (
    id               INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CYCLE CACHE 200 ORDER )
    NOT NULL,
    amount           NUMBER NOT NULL,
    payment_type_id  INTEGER NOT NULL,
    reservation_id   INTEGER NOT NULL
)
LOGGING;

COMMENT ON TABLE payment IS
    'Stores information about payments.';

ALTER TABLE payment ADD CONSTRAINT payment_pk PRIMARY KEY ( id );

CREATE TABLE payment_type (
    id    INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CYCLE NOCACHE ORDER )
    NOT NULL,
    name  VARCHAR2(50) NOT NULL
)
LOGGING;

COMMENT ON TABLE payment_type IS
    'Defines possible payment types.';

ALTER TABLE payment_type ADD CONSTRAINT payment_type_pk PRIMARY KEY ( id );

CREATE TABLE reservation (
    id                     INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CYCLE CACHE 100 ORDER )
    NOT NULL,
    creation_date          DATE NOT NULL,
    checkin_date           DATE NOT NULL,
    checkout_date          DATE NOT NULL,
    room_id                INTEGER NOT NULL,
    reservation_status_id  INTEGER NOT NULL,
    price                  NUMBER(12, 2) NOT NULL,
    payer_id               INTEGER NOT NULL,
    stay_duration          NUMBER AS ( trunc(checkout_date - checkin_date + 1) ) VIRTUAL
)
LOGGING;

COMMENT ON TABLE reservation IS
    'Stores information about reservations.';

ALTER TABLE reservation ADD CONSTRAINT reservation_pk PRIMARY KEY ( id );

CREATE TABLE reservation_status (
    id    INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CYCLE NOCACHE ORDER )
    NOT NULL,
    name  VARCHAR2(50) NOT NULL
)
LOGGING;

COMMENT ON TABLE reservation_status IS
    'Defines possible reservation statuses.';

ALTER TABLE reservation_status ADD CONSTRAINT reservation_status_pk PRIMARY KEY ( id );

CREATE TABLE room (
    id            INTEGER NOT NULL,
    max_tenants   INTEGER NOT NULL,
    room_type_id  INTEGER NOT NULL
)
LOGGING;

COMMENT ON TABLE room IS
    'Stores information about rooms.';

ALTER TABLE room ADD CONSTRAINT room_pk PRIMARY KEY ( id );

CREATE TABLE room_type (
    id          INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CYCLE NOCACHE ORDER )
    NOT NULL,
    name        VARCHAR2(50) NOT NULL,
    base_price  NUMBER NOT NULL
)
LOGGING;

COMMENT ON TABLE room_type IS
    'Defines possible room types.';

ALTER TABLE room_type ADD CONSTRAINT room_type_pk PRIMARY KEY ( id );

CREATE TABLE season_pricing (
    id          INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CYCLE NOCACHE ORDER )
    NOT NULL,
    start_date  DATE NOT NULL,
    end_date    DATE NOT NULL,
    multiplier  NUMBER NOT NULL,
    name        VARCHAR2(50) NOT NULL
)
LOGGING;

COMMENT ON TABLE season_pricing IS
    'Defines the pricing depending on the season.';

ALTER TABLE season_pricing ADD CONSTRAINT season_pricing_pk PRIMARY KEY ( id );

ALTER TABLE guest
    ADD CONSTRAINT gst_dcmnt_tp_fk FOREIGN KEY ( document_type_id )
        REFERENCES document_type ( id )
    NOT DEFERRABLE;

ALTER TABLE guest
    ADD CONSTRAINT gst_sts_fk FOREIGN KEY ( status_id )
        REFERENCES guest_status ( id )
    NOT DEFERRABLE;

ALTER TABLE guests_in_reservation
    ADD CONSTRAINT gsts_in_rsrv_gst_fk FOREIGN KEY ( guest_id )
        REFERENCES guest ( id )
    NOT DEFERRABLE;

ALTER TABLE guests_in_reservation
    ADD CONSTRAINT gsts_in_rsrv_rsrv_fk FOREIGN KEY ( reservation_id )
        REFERENCES reservation ( id )
    NOT DEFERRABLE;

ALTER TABLE payment
    ADD CONSTRAINT pymnt_pymnt_tp_fk FOREIGN KEY ( payment_type_id )
        REFERENCES payment_type ( id )
    NOT DEFERRABLE;

ALTER TABLE payment
    ADD CONSTRAINT pymnt_rsrv_fk FOREIGN KEY ( reservation_id )
        REFERENCES reservation ( id )
    NOT DEFERRABLE;

ALTER TABLE room
    ADD CONSTRAINT rm_rm_tp_fk FOREIGN KEY ( room_type_id )
        REFERENCES room_type ( id )
    NOT DEFERRABLE;

ALTER TABLE reservation
    ADD CONSTRAINT rsrv_gst_fk FOREIGN KEY ( payer_id )
        REFERENCES guest ( id )
    NOT DEFERRABLE;

ALTER TABLE reservation
    ADD CONSTRAINT rsrv_rm_fk FOREIGN KEY ( room_id )
        REFERENCES room ( id )
    NOT DEFERRABLE;

ALTER TABLE reservation
    ADD CONSTRAINT rsrv_rsrv_sts_fk FOREIGN KEY ( reservation_status_id )
        REFERENCES reservation_status ( id )
    NOT DEFERRABLE;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             0
-- ALTER TABLE                             24
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
